{"version":3,"sources":["components/Button/index.jsx","components/Header/index.jsx","components/Task/index.jsx","components/Tasks/index.jsx","components/AddTask/index.jsx","components/Todoist/index.jsx","App.js","index.js"],"names":["Button","text","onClick","className","prototypes","PropTypes","string","func","isRequired","Header","title","cardName","defaultProps","Task","task","onDelete","onToggle","JSON","parse","localStorage","getItem","id","important","onDoubleClick","style","marginTop","fontSize","note","Tasks","tasks","map","AddTask","addTask","useState","setText","setNote","onSubmit","e","preventDefault","day","split","length","fold","alert","type","value","onChange","target","Todoist","showAdd","setShowAdd","setTasks","setFold","loadAll","allTasks","i","key","charAt","oneTask","window","onload","nanoid","setItem","stringify","removeItem","display","height","opacity","justifyContent","alignItems","userSelect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c032e35.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport './index.css'\r\n\r\nconst Button = ({ text, onClick }) => {\r\n    return (\r\n        <button onClick={onClick} className='btn headbtn'>\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.prototypes = {\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from '../Button'\r\nimport './index.css'\r\n\r\nconst Header = ({ title, onClick, cardName }) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1 className='title'>{title}</h1>\r\n            <Button text={cardName} onClick={onClick} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Todoist'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\nimport './index.css'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${JSON.parse(localStorage.getItem('#' + task.id)).important ? 'reminder' : ''}`}\r\n            onDoubleClick={() => onToggle(task)}>\r\n            <div>\r\n                <h3>{task.text}</h3>\r\n                <p style={{ marginTop: '4px', fontSize: '14px' }}>{task.note}</p>\r\n            </div>\r\n            <FaTimes\r\n                className='faTimes'\r\n                onClick={() => onDelete(task)} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"../Task\"\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key={task.id} task={task}\r\n                    onDelete={onDelete}\r\n                    onToggle={onToggle} />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\nimport './index.css'\r\n\r\nconst AddTask = ({ addTask }) => {\r\n    const [text, setText] = useState('')\r\n    let [note, setNote] = useState('')\r\n    let fold = true\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!text) {\r\n            alert('Please input a title')\r\n            return\r\n        }\r\n        let day = note.split(' ')\r\n        if (day.length === 4) {\r\n            note = day[0] + '-' + day[1] + ' ' + day[2] + ':' + day[3]\r\n        }\r\n        addTask({ text, note, fold})\r\n        setText('')\r\n        setNote('')\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label >Task</label>\r\n                <input type=\"text\"\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label >Note</label>\r\n                <input type=\"text\"\r\n                    value={note}\r\n                    onChange={(e) => setNote(e.target.value)} />\r\n            </div>\r\n            <div className='save'>\r\n                <input type=\"submit\" value='Save Task' className='btn btn-save' />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from 'react'\r\nimport { nanoid } from 'nanoid';\r\nimport './index.css'\r\nimport Header from \"../Header\";\r\nimport Tasks from \"../Tasks\";\r\nimport AddTask from \"../AddTask\";\r\n\r\nconst Todoist = () => {\r\n  const [showAdd, setShowAdd] = useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n  const [fold, setFold] = useState(true)\r\n \r\n  const loadAll = () => {\r\n    let allTasks = [];\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      let key = localStorage.key(i);\r\n      if (key.charAt(0) === '#') {\r\n        let oneTask = localStorage.getItem(key);\r\n        allTasks = [...allTasks, JSON.parse(oneTask)]\r\n      }\r\n    }\r\n    setTasks(allTasks)\r\n  }\r\n\r\n  const addTask = (task) => {\r\n    const id = nanoid()\r\n    localStorage.setItem('#' + id, JSON.stringify({\r\n      id: id,\r\n      text: task.text,\r\n      note: task.note,\r\n      important: false\r\n    }))\r\n    if (task.fold) {\r\n      setFold(!fold)\r\n      setShowAdd(!showAdd)\r\n    }\r\n    loadAll()\r\n  }\r\n\r\n  const deleteTask = (task) => {\r\n    localStorage.removeItem('#' + task.id);\r\n    loadAll()\r\n  }\r\n\r\n  const toggleTask = (task) => {\r\n    localStorage.setItem('#' + task.id, JSON.stringify({\r\n      id: task.id,\r\n      text: task.text,\r\n      note: task.note,\r\n      important: !task.important\r\n    }))\r\n    loadAll()\r\n  }\r\n\r\n  window.onload = function () {\r\n    loadAll()\r\n  }\r\n  \r\n  return (\r\n    <div className=\"todoist innerbox\" >\r\n      <Header\r\n        title=\"Todoist\"\r\n        onClick={() => { setShowAdd(!showAdd); setFold(!fold) }}\r\n        cardName={fold ? 'Arrange' : 'Fold'}\r\n      />\r\n      {showAdd && !fold && <AddTask addTask={addTask} />}\r\n      {tasks.length > 0 ?\r\n        (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleTask} />) :\r\n        (!showAdd && <div style={{\r\n          display: 'flex', height: '75%', fontSize: '100px', opacity: '0.05',\r\n          justifyContent: 'center', alignItems: 'center', userSelect: 'none'\r\n        }}>    \r\n            No task\r\n        </div>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todoist;\r\n","import Todoist from \"./components/Todoist\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Todoist />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}